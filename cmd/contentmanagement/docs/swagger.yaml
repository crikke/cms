basePath: /
definitions:
  command.CreateWorkspace:
    properties:
      defaultLocale:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  content.Content:
    properties:
      contentDefinitionID:
        type: string
      created:
        type: string
      data:
        $ref: '#/definitions/content.ContentData'
      id:
        type: string
      updated:
        type: string
    type: object
  content.ContentData:
    properties:
      contentID:
        type: string
      created:
        description: 'TODO: does ContentData need a Created Field?'
        type: string
      properties:
        $ref: '#/definitions/content.ContentLanguage'
      status:
        type: string
      tags:
        description: Tag IDs
        items:
          type: string
        type: array
      version:
        type: integer
    type: object
  content.ContentField:
    properties:
      id:
        type: string
      localized:
        type: boolean
      type:
        type: string
      value: {}
    type: object
  content.ContentFields:
    additionalProperties:
      $ref: '#/definitions/content.ContentField'
    type: object
  content.ContentLanguage:
    additionalProperties:
      $ref: '#/definitions/content.ContentFields'
    type: object
  content.CreateContentRequest:
    properties:
      contentDefinitionId:
        type: string
    type: object
  content.OKResult:
    type: object
  content.UpdateContentRequestBody:
    properties:
      fields:
        additionalProperties: true
        description: Properties
        type: object
      language:
        description: Language
        type: string
      version:
        description: Version
        type: integer
    type: object
  contentdefinition.ContentDefinition:
    properties:
      created:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      propertydefinitions:
        additionalProperties:
          $ref: '#/definitions/contentdefinition.PropertyDefinition'
        type: object
    type: object
  contentdefinition.ContentDefinitionBody:
    properties:
      description:
        description: Content definition description
        type: string
      name:
        description: Content definition Name
        type: string
    type: object
  contentdefinition.CreatePropertyDefinitionBody:
    properties:
      description:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  contentdefinition.PropertyDefinition:
    properties:
      description:
        description: Name        string    `bson:"name,omitempty"`
        type: string
      id:
        type: string
      localized:
        type: boolean
      type:
        type: string
      validators:
        additionalProperties: true
        description: |-
          instead of using map[strin]validator.Validator, interface{} is used
          this wont be a problem becuase they will be translated to validator.Validator in GetValidatorQueury
        type: object
    type: object
  contentdefinition.UpdatePropertyDefinitionBody:
    properties:
      description:
        type: string
      localized:
        type: boolean
      name:
        type: string
      validation:
        additionalProperties: true
        type: object
    type: object
  models.ErrorBody:
    properties:
      fieldName:
        type: string
      message:
        description: 'required: true'
        type: string
    type: object
  models.GenericError:
    properties:
      body:
        $ref: '#/definitions/models.ErrorBody'
        description: 'in: body'
      statusCode:
        description: swagger:ignore
        type: integer
    type: object
  models.OKResult:
    type: object
  query.ContentListReadModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  query.ContentReadModel:
    properties:
      contentDefinitionID:
        type: string
      created:
        type: string
      id:
        type: string
      properties:
        $ref: '#/definitions/content.ContentLanguage'
        description: properties for the content
      status:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      updated:
        type: string
      version:
        type: integer
    type: object
  query.ListContentDefinitionModel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  query.ListWorkspaceResult:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  query.Tag:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  workspace.TagBody:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  workspace.Workspace:
    properties:
      description:
        type: string
      id:
        type: string
      languages:
        items:
          type: string
        type: array
      name:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /contentmanagement/workspaces:
    get:
      description: List workspaces
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/query.ListWorkspaceResult'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: List workspaces
      tags:
      - workspace
    post:
      description: Create a new workspace
      parameters:
      - description: workspace body
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/command.CreateWorkspace'
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: string
          schema:
            $ref: '#/definitions/workspace.Workspace'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Create workspace
      tags:
      - workspace
  /contentmanagement/workspaces/{workspace}:
    get:
      description: Get workspace by id
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workspace.Workspace'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Get workspace
      tags:
      - workspace
    put:
      description: Update a new workspace
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: workspace body
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/workspace.Workspace'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workspace.Workspace'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Update workspace
      tags:
      - workspace
  /contentmanagement/workspaces/{workspace}/content:
    get:
      consumes:
      - application/json
      description: list all content
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: query
        items:
          type: string
        name: cid
        required: true
        type: array
      - description: tag id
        in: query
        items:
          type: string
        name: tag
        required: true
        type: array
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/query.ContentListReadModel'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: List all content
      tags:
      - content
    post:
      consumes:
      - application/json
      description: Creates new content basen on a contentdefinition
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: contentdefinitionid
        in: body
        name: contentdefinitionid
        required: true
        schema:
          $ref: '#/definitions/content.CreateContentRequest'
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: string
          schema:
            $ref: '#/definitions/content.Content'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Create new content
      tags:
      - content
  /contentmanagement/workspaces/{workspace}/content/{id}:
    delete:
      consumes:
      - application/json
      description: Archives content with ID
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/content.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Archives content
      tags:
      - content
    get:
      consumes:
      - application/json
      description: Get content by id and optionally version
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: content version
        in: query
        name: version
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/query.ContentReadModel'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Get content by id
      tags:
      - content
    put:
      consumes:
      - application/json
      description: Update content
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: requestbody
        required: true
        schema:
          $ref: '#/definitions/content.UpdateContentRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Update content
      tags:
      - content
  /contentmanagement/workspaces/{workspace}/content/{id}/publish:
    post:
      consumes:
      - application/json
      description: Publishes content with ID
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: content version
        in: query
        name: version
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/content.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Publishes content
      tags:
      - content
  /contentmanagement/workspaces/{workspace}/contentdefinitions:
    get:
      consumes:
      - application/json
      description: Gets all existing contentdefinitions
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/query.ListContentDefinitionModel'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Get all content definitions
      tags:
      - contentdefinition
    post:
      consumes:
      - application/json
      description: |-
        Creates a new contentdefinition. The contentdefinition
        acts as a template for creating new content,
        containing what properties to create & their validation.
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/contentdefinition.ContentDefinitionBody'
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: string
          schema:
            $ref: '#/definitions/models.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Creates a new content definition
      tags:
      - contentdefinition
  /contentmanagement/workspaces/{workspace}/contentdefinitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a content definition
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Delete a content definition
      tags:
      - contentdefinition
    get:
      consumes:
      - application/json
      description: Gets a content definition by ID
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contentdefinition.ContentDefinition'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Gets a content definition
      tags:
      - contentdefinition
    put:
      consumes:
      - application/json
      description: Updates a contentdefinition
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/contentdefinition.ContentDefinitionBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Updates a contentdefinition
      tags:
      - contentdefinition
  /contentmanagement/workspaces/{workspace}/contentdefinitions/{id}/propertydefinitions:
    post:
      consumes:
      - application/json
      description: Creates a new propertydefinition
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/contentdefinition.CreatePropertyDefinitionBody'
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: string
          schema:
            $ref: '#/definitions/models.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Creates a new propertydefinition
      tags:
      - contentdefinition
  /contentmanagement/workspaces/{workspace}/contentdefinitions/{id}/propertydefinitions/{pid}:
    delete:
      consumes:
      - application/json
      description: Deletes a propertydefinition
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: pid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Deletes a propertydefinition
      tags:
      - contentdefinition
    get:
      consumes:
      - application/json
      description: Gets a propertydefinition
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: pid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contentdefinition.PropertyDefinition'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Gets a propertydefinition
      tags:
      - contentdefinition
    put:
      consumes:
      - application/json
      description: Updates an property definition
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: pid
        required: true
        type: string
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/contentdefinition.UpdatePropertyDefinitionBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Updates an property definition
      tags:
      - contentdefinition
  /contentmanagement/workspaces/{workspace}/tag:
    get:
      description: List all tags in workspace
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/query.Tag'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: List all tags in workspace
      tags:
      - workspace
    post:
      description: Creates a tag in given workspace
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: Tag
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/workspace.TagBody'
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: string
          schema:
            $ref: '#/definitions/workspace.Workspace'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Create tag
      tags:
      - workspace
  /contentmanagement/workspaces/{workspace}/tag/{tag}:
    delete:
      description: Delete tag by id
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: tag id
        in: path
        name: tag
        required: true
        type: string
      responses:
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Delete tag
      tags:
      - workspace
    get:
      description: Get tag by id
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: name
        in: path
        name: tag
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/query.Tag'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Get tag
      tags:
      - workspace
    put:
      description: Update tag by id
      parameters:
      - description: uuid formatted ID.
        format: uuid
        in: path
        name: workspace
        required: true
        type: string
      - description: name
        in: path
        name: tag
        required: true
        type: string
      - description: Tag
        in: body
        name: body
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/query.Tag'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.GenericError'
      summary: Update tag
      tags:
      - workspace
swagger: "2.0"
