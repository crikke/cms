{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/contentdelivery/content/": {
            "get": {
                "description": "Returns a list of content which has specified tags",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "List content by tags",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "content language",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.ContentResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentdelivery/content/{id}": {
            "get": {
                "description": "Gets content by ID and language. If Accept-Language header is not set,\nthe default language will be used.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get content by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "content language",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.ContentResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspace": {
            "post": {
                "description": "Create a new workspace",
                "tags": [
                    "workspace"
                ],
                "summary": "Create workspace",
                "parameters": [
                    {
                        "description": "workspace body",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/command.CreateWorkspace"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/workspace.Workspace"
                        },
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspace/{workspace}": {
            "get": {
                "description": "Get workspace by id",
                "tags": [
                    "workspace"
                ],
                "summary": "Get workspace",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/workspace.Workspace"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a new workspace",
                "tags": [
                    "workspace"
                ],
                "summary": "Update workspace",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "workspace body",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/workspace.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/workspace.Workspace"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspace/{workspace}/tag": {
            "get": {
                "description": "List all tags in workspace",
                "tags": [
                    "workspace"
                ],
                "summary": "List all tags in workspace",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/query.Tag"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a tag in given workspace",
                "tags": [
                    "workspace"
                ],
                "summary": "Create tag",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/workspace.TagBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/workspace.Workspace"
                        },
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspace/{workspace}/tag/{tag}": {
            "get": {
                "description": "Get tag by id",
                "tags": [
                    "workspace"
                ],
                "summary": "Get tag",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.Tag"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update tag by id",
                "tags": [
                    "workspace"
                ],
                "summary": "Update tag",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.Tag"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete tag by id",
                "tags": [
                    "workspace"
                ],
                "summary": "Delete tag",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tag id",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspaces/{workspace}/content": {
            "get": {
                "description": "list all content",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "List all content",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "format": "uuid",
                        "items": {
                            "type": "string"
                        },
                        "description": "uuid formatted ID.",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/query.ContentListReadModel"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates new content basen on a contentdefinition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Create new content",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "contentdefinitionid",
                        "name": "contentdefinitionid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.CreateContentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/content.Content"
                        },
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspaces/{workspace}/content/{id}": {
            "get": {
                "description": "Get content by id and optionally version",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get content by id",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "content version",
                        "name": "version",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content.Content"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update content",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Update content",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.UpdateContentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Archives content with ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Archives content",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspaces/{workspace}/content/{id}/publish": {
            "post": {
                "description": "Publishes content with ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Publishes content",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "content version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspaces/{workspace}/contentdefinitions": {
            "get": {
                "description": "Gets all existing contentdefinitions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Get all content definitions",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.ListContentDefinitionModel"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new contentdefinition. The contentdefinition\nacts as a template for creating new content,\ncontaining what properties to create \u0026 their validation.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Creates a new content definition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contentdefinition.ContentDefinitionBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        },
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspaces/{workspace}/contentdefinitions/{id}": {
            "get": {
                "description": "Gets a content definition by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Gets a content definition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contentdefinition.ContentDefinition"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a contentdefinition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Updates a contentdefinition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contentdefinition.ContentDefinitionBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a content definition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Delete a content definition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspaces/{workspace}/contentdefinitions/{id}/propertydefinitions": {
            "post": {
                "description": "Creates a new propertydefinition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Creates a new propertydefinition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contentdefinition.CreatePropertyDefinitionBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        },
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/contentmanagement/workspaces/{workspace}/contentdefinitions/{id}/propertydefinitions/{pid}": {
            "get": {
                "description": "Gets a propertydefinition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Gets a propertydefinition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contentdefinition.PropertyDefinition"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an property definition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Updates an property definition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contentdefinition.UpdatePropertyDefinitionBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a propertydefinition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "contentdefinition"
                ],
                "summary": "Deletes a propertydefinition",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "uuid formatted ID.",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        },
        "/siteconfiguration": {
            "get": {
                "description": "Gets siteconfiguration for this site.",
                "tags": [
                    "siteconfiguration"
                ],
                "summary": "Get siteconfiguration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/siteconfiguration.SiteConfigurationRequest"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates siteconfiguration for this site.",
                "tags": [
                    "siteconfiguration"
                ],
                "summary": "Updates siteconfiguration",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/siteconfiguration.SiteConfigurationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OKResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GenericError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "command.CreateWorkspace": {
            "type": "object",
            "properties": {
                "defaultLocale": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "content.Content": {
            "type": "object",
            "properties": {
                "contentDefinitionID": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/content.ContentData"
                },
                "id": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "content.ContentData": {
            "type": "object",
            "properties": {
                "contentID": {
                    "type": "string"
                },
                "created": {
                    "description": "TODO: does ContentData need a Created Field?",
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/content.ContentLanguage"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "content.ContentField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "localized": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "content.ContentFields": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/content.ContentField"
            }
        },
        "content.ContentLanguage": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/content.ContentFields"
            }
        },
        "content.CreateContentRequest": {
            "type": "object",
            "properties": {
                "contentDefinitionId": {
                    "type": "string"
                }
            }
        },
        "content.OKResult": {
            "type": "object"
        },
        "content.UpdateContentRequestBody": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "Properties",
                    "type": "object",
                    "additionalProperties": true
                },
                "language": {
                    "description": "Language",
                    "type": "string"
                },
                "version": {
                    "description": "Version",
                    "type": "integer"
                }
            }
        },
        "contentdefinition.ContentDefinition": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "propertydefinitions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/contentdefinition.PropertyDefinition"
                    }
                }
            }
        },
        "contentdefinition.ContentDefinitionBody": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Content definition description",
                    "type": "string"
                },
                "name": {
                    "description": "Content definition Name",
                    "type": "string"
                }
            }
        },
        "contentdefinition.CreatePropertyDefinitionBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "contentdefinition.PropertyDefinition": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Name        string    `bson:\"name,omitempty\"`",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "localized": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validators": {
                    "description": "instead of using map[strin]validator.Validator, interface{} is used\nthis wont be a problem becuase they will be translated to validator.Validator in GetValidatorQueury",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "contentdefinition.UpdatePropertyDefinitionBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "localized": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "validation": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "models.ErrorBody": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "message": {
                    "description": "required: true",
                    "type": "string"
                }
            }
        },
        "models.GenericError": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "in: body",
                    "$ref": "#/definitions/models.ErrorBody"
                },
                "statusCode": {
                    "description": "swagger:ignore",
                    "type": "integer"
                }
            }
        },
        "models.OKResult": {
            "type": "object"
        },
        "query.ContentListReadModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "query.ContentResponse": {
            "type": "object",
            "properties": {
                "availableLanguages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created": {
                    "type": "string"
                },
                "fields": {
                    "$ref": "#/definitions/content.ContentFields"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "query.ListContentDefinitionModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "query.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "siteconfiguration.SiteConfigurationRequest": {
            "type": "object",
            "properties": {
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "workspace.TagBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "workspace.Workspace": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        }
    }
}