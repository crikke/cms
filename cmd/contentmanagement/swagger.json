{
  "swagger": "2.0",
  "paths": {
    "/content": {
      "post": {
        "description": "Creates new content node under the parent. The content is created from the specified contentdefinition\nwhich acts as a template, containing what properties to create \u0026 their validation.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ],
        "summary": "Create new content",
        "operationId": "CreateContent",
        "parameters": [
          {
            "x-go-name": "ContentDefinitionId",
            "description": "Contentdefinition ID",
            "name": "contentdefinitionid",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UUID"
            }
          },
          {
            "x-go-name": "ParentId",
            "description": "ParentId",
            "name": "parentid",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UUID"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/CreateContentResponse"
          },
          "400": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/content/{id}": {
      "get": {
        "description": "Gets content by Id. If version is not specified, the published version will be returned.\nIf there is no version published, the version with highest version number will be returned",
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ],
        "summary": "Get content by id and optionally version",
        "operationId": "GetContent",
        "parameters": [
          {
            "$ref": "#/definitions/UUID",
            "description": "ID",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Version",
            "name": "Version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/contentResponse"
          },
          "400": {
            "$ref": "#/responses/genericError"
          },
          "404": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    }
  },
  "definitions": {
    "ContentField": {
      "description": "ContentField describes the property aswell as its value\nswagger: model ContentField",
      "type": "object",
      "properties": {
        "ID": {
          "$ref": "#/definitions/UUID"
        },
        "Localized": {
          "type": "boolean"
        },
        "Type": {
          "type": "string"
        },
        "Value": {
          "type": "object"
        }
      },
      "x-go-package": "github.com/crikke/cms/pkg/contentmanagement/content"
    },
    "ContentFields": {
      "description": "ContentField is a map where key is field name and value is the ContentField\nswagger: model ContentFields",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ContentField"
      },
      "x-go-package": "github.com/crikke/cms/pkg/contentmanagement/content"
    },
    "ContentLanguage": {
      "description": "ContentLanguage is a map containing a given languages ContentFields\nswagger: model ContentLanguage",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ContentFields"
      },
      "x-go-package": "github.com/crikke/cms/pkg/contentmanagement/content"
    },
    "Contentresponse": {
      "type": "object",
      "properties": {
        "ContentDefinitionID": {
          "$ref": "#/definitions/UUID"
        },
        "ID": {
          "$ref": "#/definitions/UUID"
        },
        "Properties": {
          "$ref": "#/definitions/ContentLanguage"
        },
        "Status": {
          "type": "string",
          "enum": [
            "draft",
            "published",
            "archived"
          ],
          "x-go-enum-desc": "draft Draft\npublished Published\narchived Archived"
        }
      },
      "x-go-name": "ContentReadModel",
      "x-go-package": "github.com/crikke/cms/pkg/contentmanagement/app/query"
    },
    "ErrorBody": {
      "type": "object",
      "required": [
        "Message"
      ],
      "properties": {
        "FieldName": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/crikke/cms/pkg/contentmanagement/api"
    },
    "UUID": {
      "description": "A UUID is a 128 bit (16 byte) Universal Unique IDentifier as defined in RFC\n4122.",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "github.com/google/uuid"
    }
  },
  "responses": {
    "CreateContentResponse": {
      "description": "",
      "headers": {
        "Location": {
          "type": "string"
        }
      }
    },
    "contentResponse": {
      "description": "GetContentResponse is the representation of the content for the Content management API\nIt contains all information of given content for every configured language.",
      "schema": {
        "$ref": "#/definitions/Contentresponse"
      }
    },
    "genericError": {
      "description": "GenericError",
      "schema": {
        "$ref": "#/definitions/ErrorBody"
      }
    }
  }
}